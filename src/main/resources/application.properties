#crowd related properties

#crowd.application.name=spring_crowd_sso
#crowd.application.password=spring_crowd_sso
#crowd.server.url=http://crowd:8095/crowd/services/
#crowd.base.url=http://crowd:8095/crowd/
#crowd.application.login.url=http://crowd:8095/crowd/console/
#crowd.cookie.token_key=crowd.token_key
#crowd.session.is_authenticated=session.isauthenticated
#crowd.session.token_key=session.tokenkey
#crowd.session.validation_interval=2
#crowd.session.last_validation=session.lastvalidation

crowd.application.name=spring_crowd_sso
crowd.application.password=spring_crowd_sso
crowd.server.url=http://localhost:8095/crowd/services/
crowd.base.url=http://localhost:8095/crowd/
crowd.application.login.url=http://localhost:8095/crowd/console/
crowd.cookie.token_key=crowd.token_key
crowd.session.is_authenticated=session.isauthenticated
crowd.session.token_key=session.tokenkey
crowd.session.validation_interval=2
crowd.session.last_validation=session.lastvalidation

#Other stuff
# default.redirect_url is where the app redirects you after succesful login if 
# you did not include a redirectTo query parameter on the url.
default.redirect_url=/landing

# This allows you to set an explicit value for Crowd to store when generating a token.
# Leave it commented to let the login app automatically use your actual remote
# address from the servlet request object.
# Crowd stores the remote address from the user's request for validation.
# Since I wasn't running the login app inside of the Docker container, my remote
# address was not the same when accessing this app vs accessing apps inside of Docker
# and thus Crowd would not validate my token when I access the Atlassian apps.
#crowd.validation.remote_address=192.168.16.1

keycloak.realm=demo
keycloak.public-client=true
keycloak.auth-server-url=https://demo.cloudbrocktec.com/auth
keycloak.ssl-required=external
keycloak.resource=oidctest
keycloak.use-resource-role-mappings=false
keycloak.truststore=/opt/spring/cacerts
keycloak.truststore-password=changeit
keycloak.principal-attribute=preferred_username

# The security constraints may not be required if specifying within Spring Security.
#keycloak.security-constraints[0].authRoles[0]=liw
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/customers/*
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/*

server.port=8080
server.forward-headers-strategy=NATIVE
server.servlet.context-path=/spring-oidc